name: Pipeline workflow
on: push
jobs:
  build:
    name: webapp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/webapp:1.0.1  
          path: ./gtas-parent
          dockerfile: ./gtas-parent/web-app.Dockerfile
          tags: latest
            - uses: docker/build-push-action@v1
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/mariadb:1.0.1  
          path: ./gtas-parent
          dockerfile: ./gtas-parent/mariadb.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/http-proxy:1.0.1 
          path: ./gtas-parent
          dockerfile: ./gtas-parent/docker-resources/proxy.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/gtas-scheduler:1.0.1
          path: .
          dockerfile: ./gtas-parent/gtas-job-scheduler-war/gtas-scheduler.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/kibana:1.0.1
          path: ./gtas-parent/scripts/elastic
          dockerfile: ./gtas-parent/scripts/elastic/install/docker/kibana/kibana.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/elasticsearch:1.0.1
          path: ./gtas-parent/scripts/elastic
          dockerfile: ./gtas-parent/scripts/elastic/install/docker/elasticsearch/elasticsearch.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/logstash:1.0.1
          path: ./gtas-parent/scripts/elastic
          dockerfile: ./gtas-parent/scripts/elastic/install/docker/elasticsearch/logstash.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/elk-setup:1.0.1
          path: ./gtas-parent/scripts/elastic
          dockerfile: ./gtas-parent/scripts/elastic/install/docker/elasticsearch/elk-setup.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/neo4j-etl-job:1.0.1
          path: .
          dockerfile: ./gtas-neo4j-etl/etl_job.Dockerfile
          tags: latest
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
          repository: simbam1/neo4j:1.0.1
          path: .
          dockerfile: ./gtas-neo4j-etl/neo4j.Dockerfile
          tags: latest
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: |
          sudo apt-get -y update
          sudo apt-get install -y curl
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.21.0/kompose-linux-amd64 -o kompose
          chmod +x kompose
          sudo mv ./kompose /usr/local/bin/kompose
          kompose -f docker-compose.yml -f pipeline-deployment.yaml convert --out deploy.yaml
          aws sts get-caller-identity
      # - uses: azure/k8s-bake@v1
      #   with:
      #     renderEngine: 'kompose' 
      #     dockerComposeFile: './docker-compose.yml'
      #     kompose-version: 'latest'     
      - name: Trigger deploy
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply  --v=10 -f deploy.yaml
